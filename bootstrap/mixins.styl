//
// Mixins
// --------------------------------------------------


// Utilities
// -------------------------

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
// contenteditable attribute is included anywhere else in the document.
// Otherwise it causes space to appear at the top and bottom of elements
// that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
// `:before` to contain the top-margins of child elements.
clearfix()
  &:before

  &:after
    content: " "; /* 1 */
    display: table; /* 2 */

  &:after
    clear: both


// Webkit-style focus
tab-focus()
  // Default
  outline: thin dotted #333
  // Webkit
  outline: 5px auto -webkit-focus-ring-color
  outline-offset: -2px

// Center-align a block level element
center-block()
  display: block
  margin-left: auto
  margin-right: auto

// Sizing shortcuts
size(width, height)
  width: width
  height: height

square(size)
  size(size, size)

// Placeholder text
placeholder(color = $input-color-placeholder)
  &:-moz-placeholder
    color: color // Firefox 4-18
  &::-moz-placeholder 
    color: color // Firefox 19+
  &:-ms-input-placeholder 
    color: color // Internet Explorer 10+
  &::-webkit-input-placeholder 
    color: color // Safari and Chrome

// Text overflow
// Requires inline-block or block for proper styling
text-overflow()
  overflow: hidden
  text-overflow: ellipsis
  white-space: nowrap

// CSS image replacement
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
hide-text()
  font: "0/0" a
  color: transparent
  text-shadow: none
  background-color: transparent
  border: 0

// CSS3 PROPERTIES
// --------------------------------------------------

// Single side border-radius
border-top-radius(radius)
  border-top-right-radius: radius
  border-top-left-radius: radius

border-right-radius(radius)
  border-bottom-right-radius: radius
  border-top-right-radius: radius

border-bottom-radius(radius)
  border-bottom-right-radius: radius
  border-bottom-left-radius: radius

border-left-radius(radius)
  border-bottom-left-radius: radius
  border-top-left-radius: radius

// Drop shadows
box-shadow(shadow)
  -webkit-box-shadow: shadow; // iOS <4.3 & Android <4.1
  box-shadow: shadow

// Transitions
transition(transition)
  -webkit-transition: transition
  transition: transition

transition-delay(transition-delay)
  -webkit-transition-delay: transition-delay
  transition-delay: transition-delay

transition-duration(transition-duration)
  -webkit-transition-duration: transition-duration
  transition-duration: transition-duration

transition-transform(transition)
  -webkit-transition: -webkit-transform transition
  -moz-transition: -moz-transform transition
  -o-transition: -o-transform transition
  transition: transform transition

// Transformations
rotate(degrees)
  -webkit-transform: degrees
  -ms-transform: degrees
  transform: rotate(degrees)

scale(ratio)
  -webkit-transform: ratio
  -ms-transform: ratio
  transform: ratio

translate(x, y)
  -webkit-transform: x, y
  -ms-transform: x, y
  transform: x, y

skew(x, y)
  -webkit-transform: x, y
  -ms-transform: skewX(x) skewY(y); // See https://github.com/twbs/bootstrap/issues/4885
  transform: x, y

//TODO: Add back in translate3d

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible` but can be changed to `hidden`
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
backface-visibility(visibility)
  -webkit-backface-visibility: visibility
  -moz-backface-visibility: visibility
  backface-visibility: visibility

// Background clipping
background-clip(clip)
  background-clip: clip

// Background sizing
background-size(size)
  background-size: size

// Box sizing
box-sizing(boxmodel)
  -webkit-box-sizing: boxmodel
  -moz-box-sizing: boxmodel
  box-sizing: boxmodel

// User select
// For selecting text on the page
user-select(select)
  -webkit-user-select: select
  -moz-user-select: select
  -ms-user-select: select
  -o-user-select: select
  user-select: select

// Resize anything
resizable(direction)
 resize: direction; // Options: horizontal, vertical, both
 overflow: auto; // Safari fix

// CSS3 Content Columns
content-columns(column-count, column-gap =  $grid-gutter-width)
  -webkit-column-count: column-count
  -moz-column-count: column-count
  column-count: column-count
  -webkit-column-gap: column-gap
  -moz-column-gap: column-gap
  column-gap: column-gap

// Optional hyphenation
hyphens(mode = auto)
  word-wrap: break-word
  -webkit-hyphens: mode
  -moz-hyphens: mode
  -ms-hyphens: mode
  -o-hyphens: mode
  hyphens: mode

// Opacity
opacity(opacity)
 opacity: opacity

// GRADIENTS
// --------------------------------------------------

#gradient
  gradient-horizontal(startColor = #555, endColor = #333) {
    background-color: endColor;
    background-image: -moz-linear-gradient(left, startColor, endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from(startColor), to(endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, startColor, endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, startColor, endColor); // Opera 11.10
    background-image: linear-gradient(to right, startColor, endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: s("progid:DXImageTransform.Microsoft.gradient(startColorstr='%s', endColorstr='%s', GradientType=1)",startColor,endColor); // IE9 and down
  }
  gradient-vertical(startColor = #555, endColor = #333) {
    background-color: mix(startColor, endColor, 60%);
    background-image: -moz-linear-gradient(top, startColor, endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(startColor), to(endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, startColor, endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, startColor, endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, startColor, endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: s("progid:DXImageTransform.Microsoft.gradient(startColorstr='%s', endColorstr='%s', GradientType=0)",startColor,endColor); // IE9 and down
  }
  gradient-directional(startColor = #555, endColor = #333, deg = 45deg) {
    background-color: endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(deg, startColor, endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(deg, startColor, endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(deg, startColor, endColor); // Opera 11.10
    background-image: linear-gradient(deg, startColor, endColor); // Standard, IE10
  }
  gradient-vertical-three-colors(startColor = #00b3ee, midColor = #7a43b6, colorStop = 50%, endColor = #c3325f) {
    background-color: mix(midColor, endColor, 80%);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(startColor), color-stop(colorStop, midColor), to(endColor));
    background-image: -webkit-linear-gradient(startColor, midColor colorStop, endColor);
    background-image: -moz-linear-gradient(top, startColor, midColor colorStop, endColor);
    background-image: -o-linear-gradient(startColor, midColor colorStop, endColor);
    background-image: linear-gradient(startColor, midColor colorStop, endColor);
    background-repeat: no-repeat;
    filter: s("progid:DXImageTransform.Microsoft.gradient(startColorstr='%s', endColorstr='%s', GradientType=0)",startColor,endColor); // IE9 and down, gets no color-stop at all for proper fallback
  }
  gradient-radial(innerColor = #555, outerColor = #333) {
    background-color: outerColor;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(innerColor), to(outerColor));
    background-image: -webkit-radial-gradient(circle, innerColor, outerColor);
    background-image: -moz-radial-gradient(circle, innerColor, outerColor);
    background-image: -o-radial-gradient(circle, innerColor, outerColor);
    background-repeat: no-repeat;
  }
  gradient-striped(color = #555, angle = 45deg) {
    background-color: color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient(angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient(angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient(angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient(angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
  }

// Reset filters for IE
//
// When you need to remove a gradient background, don't forget to use this to reset
// the IE filter for IE9 and below.
reset-filter()
  filter: s("progid:DXImageTransform.Microsoft.gradient(enabled = false)")

// RETINA IMAGE SUPPORT
// --------------------------------------------------

// Short retina mixin for setting background-image and -size
img-retina(file-1x, file-2x, width-1x, height-1x)
  background-image: url("@{file-1x}");
  
  @media only screen and (-webkit-min-device-pixel-ratio: 2)
    background-image: url("@{file-2x}")
    background-size: width-1x height-1x

  @media only screen and ( min--moz-device-pixel-ratio: 2)
    background-image: url("@{file-2x}")
    background-size: width-1x height-1x
 
  @media only screen and ( -o-min-device-pixel-ratio: 2/1)
    background-image: url("@{file-2x}")
    background-size: width-1x height-1x
  
  @media only screen and ( min-device-pixel-ratio: 2)
    background-image: url("@{file-2x}")
    background-size: width-1x height-1x
 
  @media only screen and ( min-resolution: 192dpi)
    background-image: url("@{file-2x}")
    background-size: width-1x height-1x

  @media only screen and ( min-resolution: 2dppx)
    background-image: url("@{file-2x}")
    background-size: width-1x height-1x


// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
nav-divider(color = #e5e5e5)
  height: 1px
  margin: (($line-height-computed / 2) - 1) 0
  overflow: hidden
  background-color: color

// Alerts
// -------------------------
alert-variant(background, border, text-color)
  background-color: background
  border-color: border
  color: text-color
  hr
    border-top-color: darken(border, 5%)

  .alert-link
    color: darken(text-color, 10%)


// Button pseudo states
// -------------------------
// Easily pump out default styles, as well as :hover, :focus, :active
 
// and disabled options for all buttons
btn-pseudo-states(color, background, border)
  color: color
  background-color: background
  border-color: border

  &:hover,
  &:focus,
  &:active,
  &.active
    background-color: darken(background, 5%)
    border-color: darken(border, 10%)

  &.disabled,
  &[disabled],
  fieldset[disabled] &
    &,
    &:hover,
    &:focus,
    &:active,
    &.active
      background-color: background
      border-color: border



// Labels
// -------------------------
label-variant(color)
  background-color: color
  &[href]
    &:hover,
    &:focus
      background-color: darken(color, 10%)



// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `navbarVerticalAlign(30px);` to calculate the appropriate top margin.
navbar-vertical-align(element-height)
  margin-top: (($navbar-height - element-height) / 2)
  margin-bottom: (($navbar-height - element-height) / 2)

// Progress bars
// -------------------------
progress-bar-variant(color)
  background-color: color
//TODO: FIX
//  .progress-striped &
//    #gradient > striped(color)


// Responsive utilities
// -------------------------
// More easily include all the states for responsive-utilities.styl.
responsive-visibility()
  display: block !important
  tr&
    display: table-row !important
  th&,
  td&
    display: table-cell !important

responsive-invisibility()
  display: none !important
  tr&
    display: none !important
  th&,
  td&
    display: none !important

// Grid System
// -----------

// Centered container element
container-fixed()
  margin-right: auto
  margin-left: auto
  clearfix()

// Creates a wrapper for a series of columns
make-row()
  // Then clear the floated columns
  clearfix()

  @media (min-width: $screen-small)
    margin-left: ($grid-gutter-width / -2)
    margin-right: ($grid-gutter-width / -2)

  // Negative margin nested rows out to align the content of columns
  .row
    margin-left: ($grid-gutter-width / -2)
    margin-right: ($grid-gutter-width / -2)


// Generate the columns
make-column(columns)
  position: relative
  // Prevent columns from collapsing when empty
  min-height: 1px
  // Inner gutter via padding
  padding-left: ($grid-gutter-width / 2)
  padding-right: ($grid-gutter-width / 2)

  // Calculate width based on number of columns available
  @media (min-width: $grid-float-breakpoint)
    float: left
    width: percentage((columns / $grid-columns))


// Generate the column offsets
make-column-offset(columns)
  @media (min-width: $grid-float-breakpoint)
    margin-left: percentage((columns / $grid-columns))


make-column-push(columns)
  @media (min-width: $grid-float-breakpoint)
    left: percentage((columns / $grid-columns))


make-column-pull(columns)
  @media (min-width: $grid-float-breakpoint)
    right: percentage((columns / $grid-columns))


// Generate the small columns
make-small-column(columns)
  position: relative
  float: left
  // Prevent columns from collapsing when empty
  min-height: 1px
  // Inner gutter via padding
  padding-left: ($grid-gutter-width / 2)
  padding-right: ($grid-gutter-width / 2)
  $max-width: ($grid-float-breakpoint - 1)

  // Calculate width based on number of columns available
  @media (max-width: $max-width)
    width: percentage((columns / $grid-columns))


// Form validation states
//
// Used in forms.styl to generate the form validation CSS for warnings, errors
// and successes.

form-control-validation(text-color = #555, border-color = #ccc, background-color = #f5f5f5)
  // Color the label and help text
  .help-block,
  .control-label
    color: text-color

  // Set the border and box shadow on specific inputs to match
  .form-control
    padding-right: 32px; // to account for the feedback icon
    border-color: border-color
    box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075)); // Redeclare so transitions work
    &:focus
      border-color: darken(border-color, 10%)

  // Set validation states also for addons
  .input-group-addon
    color: text-color
    border-color: border-color
    background-color: background-color

// Custom Percentage Function

percentage(decimal)
  unquote(""+(decimal * 100)+"%")
    